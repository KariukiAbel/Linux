In most Linux systems, your default shell is the bash shell. To fi nd out what your default
login shell is, type the following commands:

$whoami
bobsira


Although most Linux users have a preference for one shell or another, when you know how to
use one shell, you can quickly learn any of the others by occasionally referring to the shell’s
man page (for example, type man bash).

The man pages provide documentation for commands, file formats, and other components in Linux.

Running Commands
The simplest way to run a command is to type the name of the command from a shell.

$ date
Sat Oct 19 08:04:00 EST 2014

Typing the date command, with no options or arguments, causes the current day, month,
date, time, time zone, and year to be displayed as just shown. Here are a few other com-
mands you can try:

$ pwd
/home/chris
$ hostname
mydesktop
$ ls
Desktop
Documents
Downloads
Music
Pictures
Public
Templates
Videos

The pwd command shows your current working directory. Typing hostname shows your
computer’s hostname. The ls command lists the fi les and directories in your current direc-
tory. Although many commands can be run by just typing command names, it’s more com-
mon to type more after the command to modify its behavior. The characters and words you
can type after a command are called options and arguments.


Understanding command syntax
Most commands have one or more options you can add to change the command’s behavior.
Options typically consist of a single letter, preceded by a hyphen. However, you can group
single-letter options together or precede each with a hyphen, to use more than one option
at a time. For example, the following two uses of options for the ls command are the same:

$ ls -l -a -t
$ ls -lat

In both cases, the ls command is run with the -l (long listing), -a (show hidden dot
fi les), and -t options (list by time).


Some commands include options that are represented by a whole word. To tell a command
to use a whole word as an option, you typically precede it with a double hyphen (--). For
example, to use the help option on many commands, you enter --help on the command
line. Without the double hyphen, the letters h, e, l, and p would be interpreted as separate
options. (There are some commands that don’t follow the double hyphen convention, using
a single hyphen before a word, but most commands use double hyphens for word options.)

Note: You can use the --help option with most commands to see the options and arguments that they support: for exam-
ple, try typing hostname --help.


Sometimes, an argument is associated with an option. In that case, the argument must immedi-
ately follow the option. With single-letter options, the argument typically follows after a space.
For full-word options, the argument often follows an equal sign (=). Here are some examples:

$ ls --hide=Desktop
Documents Music
Downloads Pictures
Public
Videos
Templates

In the previous example, the --hide option tells the ls command to not display the fi le or
directory named Desktop when listing the contents of the directory. Notice that the equal
sign immediately follows the option (no space) and then the argument (again, no space).

Here’s an example of a single-letter option that is followed by an argument:
$ tar -cvf backup.tar /home/chris

In the tar example just shown, the options say to create (c) a fi le (f) named backup.tar
that includes all the contents of the /home/chris directory and its subdirectories and
show verbose messages as the backup is created (v). Because backup.tar is an argument
to the f option, backup.tar must immediately follow the option.

Here are a few commands you can try out. See how they behave differently with
different options:

$ ls
Desktop Documents Downloads Music Pictures Public Templates
Videos

$ ls -a
.
Desktop
.gnome2_private .lesshst
Public
..
Documents
.gnote
.local
Templates
.bash_history Downloads
.gnupg
.mozilla
Videos
.bash_logout
.emacs
.gstreamer-0.10 Music
.xsession-errors
.bash_profile .esd_auth
.gtk-bookmarks
Pictures
.zshrc
.bashrc
.fsync.log .gvfs
Pictures


$ uname
Linux
$ uname -a
Linux unused 3.10.0-121.el7.x86_64 #1 SMP Tue Oct 21 10:48:19
EDT 2014 x86_64 x86_64 x86_64 GNU/Linux
$ date
Tue Oct 21 09:08:38 EST 2014
$ date +'%d/%m/%y'
10/21/14
$ date +'%A, %B %d, %Y'
Tuesday, October 21, 2014

The ls command, by itself, shows all regular fi les and directories in the current directory.
By adding the -a, you can also see the hidden fi les in the directory (those beginning with
a dot). The uname command shows the type of system you are running (Linux). When you
add -a, you also can see the hostname, kernel release, and kernel version.

The date command has some special types of options. By itself, date simply prints the
current day, date, and time as shown above. But the date command supports a special +
format option, which lets you display the date in different formats. Type date --help to
see different format indicators you can use.
